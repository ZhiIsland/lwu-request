import{_ as s,o as n,c as a,V as l}from"./chunks/framework.df15cb86.js";const A=JSON.parse('{"title":"请求配置","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"config/request.md","filePath":"config/request.md"}'),o={name:"config/request.md"},e=l(`<h1 id="请求配置" tabindex="-1">请求配置 <a class="header-anchor" href="#请求配置" aria-label="Permalink to &quot;请求配置&quot;">​</a></h1><p>这里是单次请求时的配置内容。</p><h2 id="task-id" tabindex="-1">task_id <a class="header-anchor" href="#task-id" aria-label="Permalink to &quot;task_id&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>string</code></li><li><strong>默认值</strong>: <code></code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 请求ID，做终止本次请求和过滤重复请求时需要。</li></ul><h2 id="before" tabindex="-1">before <a class="header-anchor" href="#before" aria-label="Permalink to &quot;before&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>Function</code></li><li><strong>默认值</strong>: <code></code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 自定义请求前拦截。 <ul><li><code>reject</code> 参数可以自定义抛出异常，需要 <code>v1.8.2</code> 及以上版本支持</li></ul></li></ul><h2 id="after" tabindex="-1">after <a class="header-anchor" href="#after" aria-label="Permalink to &quot;after&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>Function</code></li><li><strong>默认值</strong>: <code></code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 自定义请求后拦截。 <ul><li><code>reject</code> 参数可以自定义抛出异常，需要 <code>v1.8.2</code> 及以上版本支持</li></ul></li></ul><h2 id="header" tabindex="-1">header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;header&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>object</code></li><li><strong>默认值</strong>: <code>{}</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 自定义请求header。</li></ul><h2 id="method" tabindex="-1">method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;method&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>&#39;GET&#39; | &#39;POST&#39; | &#39;PUT&#39; | &#39;DELETE&#39; | &#39;HEAD&#39; | &#39;CONNECT&#39; | &#39;HEAD&#39; | &#39;OPTIONS&#39; | &#39;TRACE&#39;</code></li><li><strong>默认值</strong>: <code>&#39;GET&#39;</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 请求方式</li></ul><h2 id="timeout" tabindex="-1">timeout <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;timeout&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>number</code></li><li><strong>默认值</strong>: <code>6000</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>：请求超时时间</li></ul><h2 id="datatype" tabindex="-1">dataType <a class="header-anchor" href="#datatype" aria-label="Permalink to &quot;dataType&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>string</code></li><li><strong>默认值</strong>: <code>&#39;json&#39;</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 如果设为 json，会对返回的数据进行一次 JSON.parse，非 json 不会进行 JSON.parse</li></ul><h2 id="responsetype" tabindex="-1">responseType <a class="header-anchor" href="#responsetype" aria-label="Permalink to &quot;responseType&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>string</code></li><li><strong>默认值</strong>: <code>text</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 设置响应的数据类型。合法值：<code>text</code>、<code>arraybuffer</code></li></ul><h2 id="sslverify" tabindex="-1">sslVerify <a class="header-anchor" href="#sslverify" aria-label="Permalink to &quot;sslVerify&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>boolean</code></li><li><strong>默认值</strong>: <code>true</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 验证 ssl 证书</li></ul><h2 id="withcredentials" tabindex="-1">withCredentials <a class="header-anchor" href="#withcredentials" aria-label="Permalink to &quot;withCredentials&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>boolean</code></li><li><strong>默认值</strong>: <code>false</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 跨域请求时是否携带凭证（cookies）</li></ul><h2 id="firstipv4" tabindex="-1">firstIpv4 <a class="header-anchor" href="#firstipv4" aria-label="Permalink to &quot;firstIpv4&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>boolean</code></li><li><strong>默认值</strong>: <code>false</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: DNS解析时优先使用ipv4</li></ul><h2 id="retrycount" tabindex="-1">retryCount <a class="header-anchor" href="#retrycount" aria-label="Permalink to &quot;retryCount&quot;">​</a></h2><ul><li><strong>类型</strong>: <code>number</code></li><li><strong>默认值</strong>: <code>3</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>: 请求失败自动重试次数</li></ul><h2 id="loading" tabindex="-1">loading <a class="header-anchor" href="#loading" aria-label="Permalink to &quot;loading&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>boolean</code></li><li><strong>默认值</strong>: <code>true</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>：请求过程是否显示loading <ul><li><code>1.3.0</code> 及以上版本支持</li></ul></li></ul><h2 id="loadingtext" tabindex="-1">loadingText <a class="header-anchor" href="#loadingtext" aria-label="Permalink to &quot;loadingText&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>string</code></li><li><strong>默认值</strong>: <code>请求中...</code></li><li><strong>是否必填</strong>: 否</li><li><strong>描述</strong>：请求中loading弹窗的提示文本 <ul><li><code>1.3.0</code> 及以上版本支持</li></ul></li></ul><h2 id="domain" tabindex="-1">domain <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;domain&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>string</code></li><li><strong>默认值</strong>：<code></code></li><li><strong>是否必填</strong>：否</li><li><strong>描述</strong>：自定义请求域名，用于设置单次请求的域名地址，常用于上传下载场景。 <ul><li><code>1.4.10</code> 及以上版本支持</li></ul></li></ul><h2 id="autotaketoken" tabindex="-1">autoTakeToken <a class="header-anchor" href="#autotaketoken" aria-label="Permalink to &quot;autoTakeToken&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>boolean</code></li><li><strong>默认值</strong>：<code>true</code></li><li><strong>是否必填</strong>：否</li><li><strong>描述</strong>：是否自动携带 <code>token</code>，可用于设置单个请求不自动携带token场景。 <ul><li><code>1.6.3</code> 及以上版本支持</li><li>由于 <code>config</code> API链式调用会覆盖全局的请求配置，所以建议通过<a href="/config/request.html#参数设置方式">参数设置方式</a>设置；如果是通过<a href="/config/request.html#API设置方式">API设置方式</a>设置的参数，需要手动重新设置为初始设置内容，不然该请求单独设置的配置项将会影响后面所有的请求配置项。</li></ul></li></ul><h2 id="originalresponse" tabindex="-1">originalResponse <a class="header-anchor" href="#originalresponse" aria-label="Permalink to &quot;originalResponse&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>boolean</code></li><li><strong>默认值</strong>：<code>false</code></li><li><strong>是否必填</strong>：否</li><li><strong>描述</strong>：是否返回请求原始响应内容，默认为 <code>false</code><ul><li>为 <code>true</code> 时，返回的响应内容为平台请求API返回的原始响应内容，包含响应头、响应状态码等信息。</li><li><code>1.8.0</code> 及以上版本支持。</li><li>使用示例</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/v1/save</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">originalResponse</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></li></ul><h2 id="customdata" tabindex="-1">customData <a class="header-anchor" href="#customdata" aria-label="Permalink to &quot;customData&quot;">​</a></h2><ul><li><strong>类型</strong>：<code>any</code></li><li><strong>默认值</strong>：<code>{}</code></li><li><strong>是否必填</strong>：否</li><li><strong>描述</strong>：发起请求时的自定义参数，一般会在拦截器中使用。 <ul><li><code>v1.8.3</code> 及以上版本支持。</li></ul></li></ul><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><p><strong>请求配置支持 <code>参数设置</code> 和 <code>API设置</code> 两种方式供开发者选择使用，具体参考下面示例。</strong></p><div class="danger custom-block"><p class="custom-block-title">注意事项</p><ul><li>示例中的请求配置为全部配置内容演示，具体使用时需要根据自己的实际情况选择使用。</li><li><code>API设置方式</code> 仅 <code>1.3.0</code> 及以上版本支持。</li></ul></div><ul><li><h4 id="参数设置方式" tabindex="-1">参数设置方式 <a class="header-anchor" href="#参数设置方式" aria-label="Permalink to &quot;参数设置方式&quot;">​</a></h4></li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user/save</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">user_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">task_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user-info-111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">before</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">after</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">dataType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">responseType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sslVerify</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">firstIpv4</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">retryCount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">loading</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">loadingText</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加载中...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">domain</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">autoTakeToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">// 此处可自定义业务逻辑</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">// 此处仅为演示</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">请求服务异常</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li><h4 id="api设置方式" tabindex="-1">API设置方式 <a class="header-anchor" href="#api设置方式" aria-label="Permalink to &quot;API设置方式&quot;">​</a></h4></li></ul><div class="danger custom-block"><p class="custom-block-title">注意事项</p><ul><li>API设置方式原理是在请求类里面增加了全局的请求参数变量，所以通过API设置方式设置的参数都会影响所有的请求配置项，需要手动重新设置为默认参数。</li></ul></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">request</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">config</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">task_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user-info-111</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">before</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">after</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">dataType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">responseType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">sslVerify</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">firstIpv4</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">retryCount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">loading</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">loadingText</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加载中...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">domain</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">autoTakeToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user/save</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	    </span><span style="color:#F07178;">user_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">// 此处可自定义业务逻辑</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;font-style:italic;">// 此处仅为演示</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">请求服务异常</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,46),p=[e];function t(r,c,i,D,y,F){return n(),a("div",null,p)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
